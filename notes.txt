


/register - POST 
			-> call registerUser(req.body)
			-> create new user if not exist

/login - POST
		   -> Call checkUser(req.body) if user exist in database
		   -> if exist then generate the token
		   -> attach to cookie

/JWT configuration 
		   -> install necessary dependencies
		   -> define strategy for passport
		   ->passport.use(srategy)
		   -> app.js register that eg : require("./config/passportJwt"); //should be registered before using passport.authenticate() in routes.

/GoogleAuth congiguration
		  ->/api/auth/login -> redirect google page
		  ->define google Startegy(checks in database any matching profile.id with googleId(user attribute))
		  -> if no then creates new user
		  ->passport.use(startegy)
		  ->app.js register that eg : require("./config/passportGoogle"); // should be registered before using passport.authenticate() in routes.
		  -> /auth/google/callback - generate the token and attach to cookie


// =============================================================================
// Recursive Comment Routing
// =============================================================================

Add a parent comment to a particular shelter
POST -  /comment/shelterId

Add a reply to a comment
POST - /comment/commentId/reply/shelterId

Delete a comment
Delete- /comment/commentId/delete/shelterId

Get all comments in a  shelter
Get- /comment/shelterId