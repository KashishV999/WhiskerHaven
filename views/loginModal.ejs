<dialog id="loginModal" class="modal">
  <div class="modal-box max-w-md p-0 bg-transparent border-none shadow-none">
    <div class="bg-white rounded-2xl shadow-xl overflow-hidden border border-gray-100 relative">
      <!-- Background Pattern -->
      <div class="absolute inset-0 opacity-5">
        <div class="absolute inset-0" style="background-image: url('data:image/svg+xml,<svg width="60" height="60" viewBox="0 0 60 60" xmlns="http://www.w3.org/2000/svg"><g fill="none" fill-rule="evenodd"><g fill="%23FBBF24" fill-opacity="0.1"><path d="M30 30c0-11.046-8.954-20-20-20s-20 8.954-20 20 8.954 20 20 20 20-8.954 20-20zm0 0c0 11.046 8.954 20 20 20s20-8.954 20-20-8.954-20-20-20-20 8.954-20 20z"/></g></g></svg>');"></div>
      </div>

      <!-- Close Button -->
      <button 
        onclick="loginModal.close()" 
        class="absolute top-4 right-4 z-20 w-8 h-8 bg-gray-100 hover:bg-gray-200 rounded-full flex items-center justify-center transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-amber-500 focus:ring-offset-2"
        aria-label="Close login modal"
        type="button"
      >
        <svg class="w-4 h-4 text-gray-600" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
          <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"/>
        </svg>
      </button>

      <div class="p-8 relative z-10">
        <div class="flex justify-center mb-4">
          <div class="inline-flex items-center justify-center w-16 h-16 bg-gradient-to-br from-amber-400 to-amber-500 rounded-full">
            <img
              src="https://www.shutterstock.com/image-vector/vector-cat-face-minimalist-adorable-600nw-2426797721.jpg"
              alt="Whisker Haven Logo"
              width="40"
              height="40"
              class="h-10 w-10 rounded-full"
            />
          </div>
        </div>
        
        <h1 class="text-3xl font-bold text-gray-900 mb-6 text-center" id="login-modal-title">Login</h1>
        
        <form action="/api/login" method="POST" class="space-y-4" novalidate>
          <div class="space-y-2">
            <label for="email" class="block text-sm font-medium text-gray-700">
              Email: <span class="text-red-500" aria-label="required">*</span>
            </label>
            <input
              type="email"
              name="email"
              id="email"
              placeholder="Enter your email address"
              required
              autocomplete="email"
              aria-describedby="email-error"
              class="w-full px-4 py-3 border-2 border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-amber-500 focus:border-amber-500 transition-all duration-300 hover:border-gray-400"
            />
            <div id="email-error" class="text-red-500 text-sm hidden" role="alert" aria-live="polite"></div>
          </div>

          <div class="space-y-2">
            <label for="password" class="block text-sm font-medium text-gray-700">
              Password: <span class="text-red-500" aria-label="required">*</span>
            </label>
            <div class="relative">
              <input
                type="password"
                name="password"
                id="password"
                placeholder="Enter your password"
                required
                autocomplete="current-password"
                aria-describedby="password-error"
                class="w-full px-4 py-3 border-2 border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-amber-500 focus:border-amber-500 transition-all duration-300 hover:border-gray-400 pr-12"
              />
              <button
                type="button"
                onclick="togglePassword()"
                class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-gray-700 focus:outline-none focus:ring-2 focus:ring-amber-500 rounded p-1"
                aria-label="Toggle password visibility"
              >
                <svg id="password-show-icon" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
                  <path d="M10 12a2 2 0 100-4 2 2 0 000 4z"/>
                  <path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd"/>
                </svg>
                <svg id="password-hide-icon" class="w-5 h-5 hidden" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
                  <path fill-rule="evenodd" d="M3.707 2.293a1 1 0 00-1.414 1.414l14 14a1 1 0 001.414-1.414l-1.473-1.473A10.014 10.014 0 0019.542 10C18.268 5.943 14.478 3 10 3a9.958 9.958 0 00-4.512 1.074l-1.78-1.781zm4.261 4.26l1.514 1.515a2.003 2.003 0 012.45 2.45l1.514 1.514a4 4 0 00-5.478-5.478z" clip-rule="evenodd"/>
                  <path d="M12.454 16.697L9.75 13.992a4 4 0 01-3.742-3.741L2.335 6.578A9.98 9.98 0 00.458 10c1.274 4.057 5.065 7 9.542 7 .847 0 1.669-.105 2.454-.303z"/>
                </svg>
              </button>
            </div>
            <div id="password-error" class="text-red-500 text-sm hidden" role="alert" aria-live="polite"></div>
          </div>

          <div class="pt-2">
            <button
              type="submit"
              class="w-full px-4 py-3 bg-amber-500 text-white font-medium rounded-xl hover:bg-amber-600 focus:outline-none focus:ring-2 focus:ring-amber-500 focus:ring-offset-2 transition-all duration-300 transform hover:scale-105 hover:shadow-lg disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none"
              id="login-submit-btn"
            >
              <span id="login-btn-text">Login</span>
              <span id="login-btn-loading" class="hidden">
                <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                  <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
                Signing in...
              </span>
            </button>
          </div>

          <!-- Quick Login Buttons -->
          <div class="pt-4 space-y-2">
            <p class="text-center text-sm text-gray-500">Quick Login:</p>
            <div class="flex justify-between gap-4">
              <!-- User Login -->
              <button
                type="button"
                onclick="fillLoginForm('test@gmail.com', 'test123')"
                class="w-1/2 px-4 py-2 bg-gray-100 text-gray-700 font-medium rounded-xl hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-amber-500 focus:ring-offset-2 transition-all duration-300 hover:shadow-md"
                aria-label="Fill form with test user credentials"
              >
                <svg class="w-4 h-4 inline mr-1" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
                  <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd"/>
                </svg>
                Sign in as User
              </button>
              <!-- Admin Login -->
              <button
                type="button"
                onclick="fillLoginForm('admin@gmail.com', 'admin123')"
                class="w-1/2 px-4 py-2 bg-gray-100 text-gray-700 font-medium rounded-xl hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-amber-500 focus:ring-offset-2 transition-all duration-300 hover:shadow-md"
                aria-label="Fill form with admin credentials"
              >
                <svg class="w-4 h-4 inline mr-1" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
                  <path fill-rule="evenodd" d="M2.166 4.999A11.954 11.954 0 0010 1.944 11.954 11.954 0 0017.834 5c.11.65.166 1.32.166 2.001 0 5.225-3.34 9.67-8 11.317C5.34 16.67 2 12.225 2 7c0-.682.057-1.35.166-2.001zm11.541 3.708a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
                </svg>
                Sign in as Admin
              </button>
            </div>
          </div>

          <div class="text-center text-sm">
            <p class="text-gray-500">
              Don't have an account?
              <button 
                type="button"
                onclick="registerModal.showModal()" 
                class="text-amber-500 hover:underline underline-offset-4 ml-1 font-medium focus:outline-none focus:ring-2 focus:ring-amber-500 rounded"
              >
                Sign up
              </button>
            </p>
          </div>
        </form>
      </div>
    </div>
  </div>
</dialog>

<script>
  // Function to pre-fill the login form
  function fillLoginForm(email, password) {
    document.getElementById("email").value = email;
    document.getElementById("password").value = password;
    
    // Clear any existing errors
    clearErrors();
    
    // Validate the filled form
    validateForm();
  }

  // Toggle password visibility
  function togglePassword() {
    const passwordInput = document.getElementById('password');
    const showIcon = document.getElementById('password-show-icon');
    const hideIcon = document.getElementById('password-hide-icon');
    
    if (passwordInput.type === 'password') {
      passwordInput.type = 'text';
      showIcon.classList.add('hidden');
      hideIcon.classList.remove('hidden');
    } else {
      passwordInput.type = 'password';
      showIcon.classList.remove('hidden');
      hideIcon.classList.add('hidden');
    }
  }

  // Form validation
  function validateEmail(email) {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(email);
  }

  function showError(fieldId, message) {
    const field = document.getElementById(fieldId);
    const errorDiv = document.getElementById(fieldId + '-error');
    
    field.classList.add('border-red-500');
    field.classList.remove('border-gray-300');
    errorDiv.textContent = message;
    errorDiv.classList.remove('hidden');
  }

  function clearError(fieldId) {
    const field = document.getElementById(fieldId);
    const errorDiv = document.getElementById(fieldId + '-error');
    
    field.classList.remove('border-red-500');
    field.classList.add('border-gray-300');
    errorDiv.classList.add('hidden');
  }

  function clearErrors() {
    clearError('email');
    clearError('password');
  }

  function validateForm() {
    const email = document.getElementById('email').value;
    const password = document.getElementById('password').value;
    let isValid = true;

    clearErrors();

    if (!email) {
      showError('email', 'Email is required');
      isValid = false;
    } else if (!validateEmail(email)) {
      showError('email', 'Please enter a valid email address');
      isValid = false;
    }

    if (!password) {
      showError('password', 'Password is required');
      isValid = false;
    } else if (password.length < 6) {
      showError('password', 'Password must be at least 6 characters');
      isValid = false;
    }

    return isValid;
  }

  // Real-time validation
  document.getElementById('email').addEventListener('blur', function() {
    const email = this.value;
    if (email && !validateEmail(email)) {
      showError('email', 'Please enter a valid email address');
    } else if (email) {
      clearError('email');
    }
  });

  document.getElementById('password').addEventListener('blur', function() {
    const password = this.value;
    if (password && password.length < 6) {
      showError('password', 'Password must be at least 6 characters');
    } else if (password) {
      clearError('password');
    }
  });

  // Form submission with loading state
  document.querySelector('#loginModal form').addEventListener('submit', function(e) {
    e.preventDefault();
    
    if (!validateForm()) {
      return;
    }

    const submitBtn = document.getElementById('login-submit-btn');
    const btnText = document.getElementById('login-btn-text');
    const btnLoading = document.getElementById('login-btn-loading');
    
    // Show loading state
    submitBtn.disabled = true;
    btnText.classList.add('hidden');
    btnLoading.classList.remove('hidden');
    
    // Simulate form submission (replace with actual submission)
    setTimeout(() => {
      this.submit();
    }, 500);
  });

  // Keyboard navigation
  document.getElementById('loginModal').addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
      loginModal.close();
    }
  });

  // Focus management
  document.getElementById('loginModal').addEventListener('show', function() {
    setTimeout(() => {
      document.getElementById('email').focus();
    }, 100);
  });
</script>