<% layout("/layouts/boilerplateAdmin") %>

<!----First name -->
<div class="flex flex-col space-y-6">
  <div class="flex items-center justify-between">
    <h1 class="text-2xl font-bold">Manage Applications</h1>
  </div>

  <div class="overflow-x-auto border rounded-lg">
    <table class="min-w-full divide-y divide-gray-200">
      <thead class="bg-white">
        <tr>
          <th scope="col" class="px-6 py-3 text-left text-sm font-medium text-gray-500">Applicant Email</th>
          <th scope="col" class="px-6 py-3 text-left text-sm font-medium text-gray-500">Cat Name</th>
          <th scope="col" class="px-6 py-3 text-left text-sm font-medium text-gray-500">Shelter Name</th>
          <th scope="col" class="px-6 py-3 text-left text-sm font-medium text-gray-500">Status</th>
            <th scope="col" class="px-6 py-3 text-left text-sm font-medium text-gray-500">Submitted On</th>

          <th scope="col" class="px-6 py-3 text-left text-sm font-medium text-gray-500">Actions</th>
        </tr>
      </thead>
      <tbody class="bg-white divide-y divide-gray-200">
        <% applications.forEach((application) => { %>
          <tr>
           
            <td class="px-6 py-4 whitespace-nowrap font-medium"><%= application.email %></td>
            <td class="px-6 py-4 whitespace-nowrap"><%= application.cat.name %></td>
            <td class="px-6 py-4 whitespace-nowrap"><%= application.shelter.name %></td>
            <td class="px-6 py-4 whitespace-nowrap">

              <!-- Status Display -->
              <div class="status-display" data-application-id="<%= application._id %>">
                <% if (application.status === "Pending") { %>
                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800">Pending</span>
                <% } else if (application.status === "Approved") { %>
                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">Approved</span>
                <% } else if (application.status === "Rejected") { %>
                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">Rejected</span>
                <% } %>
              </div>
              
              <!-- Status Dropdown (Hidden by default) -->
              <div class="status-edit hidden" data-application-id="<%= application._id %>">
                <select class="status-select border border-gray-300 rounded px-2 py-1 text-sm" data-original-status="<%= application.status %>">
                  <option value="Pending" <%= application.status === "Pending" ? "selected" : "" %>>Pending</option>
                  <option value="Approved" <%= application.status === "Approved" ? "selected" : "" %>>Approved</option>
                  <option value="Rejected" <%= application.status === "Rejected" ? "selected" : "" %>>Rejected</option>
                </select>
                <div class="flex space-x-2 mt-1">
                  <button class="save-status bg-green-500 text-white px-2 py-1 rounded text-xs">Save</button>
                  <button class="cancel-status bg-gray-500 text-white px-2 py-1 rounded text-xs">Cancel</button>
                </div>
              </div>
              
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500"><%= new Date(application.createdAt).toUTCString() %></td>
            <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
              <div class="flex space-x-3 justify-end">
               <!-- View Button (Eye Icon) -->
                <a href="/admin/applications/<%=application._id%>" class="text-indigo-600 hover:text-indigo-900" title="View Cat Details">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                  </svg>
                </a>
                
                      <!-- Edit Button -->
                <button class="editStatusButtons  text-yellow-600 hover:text-yellow-800 transition" title="Edit Status">
                  <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                      d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                  </svg>
                </button>


              </div>
            </td>
          </tr>
        <% }) %>
      </tbody>
    </table>
  </div>

<!-----DO ITTTTT-->


<script>
  document.addEventListener("DOMContentLoaded", function () {
    const editStatusButtons = document.querySelectorAll(".editStatusButtons");

    editStatusButtons.forEach((button) => {
      button.addEventListener("click", function () {
        const applicationRow = button.closest("tr");
        const statusDisplay = applicationRow.querySelector(".status-display");
        const statusEdit = applicationRow.querySelector(".status-edit");
        const saveStatus = applicationRow.querySelector(".save-status");
        const cancelStatus = applicationRow.querySelector(".cancel-status");

        // Toggle visibility
        statusEdit.classList.toggle("hidden");
        statusDisplay.classList.toggle("hidden");

        saveStatus.addEventListener("click", function () {
          const selectElement = statusEdit.querySelector(".status-select");
          const newStatus = selectElement.value;
          const applicationId = statusEdit.dataset.applicationId;

          console.log("Application ID:", applicationId); // Debugging

          fetch(`/admin/applications/${applicationId}`, {
            method: "PATCH",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ status: newStatus }),
          })
            .then((response) => {
              if (response.ok) {
                return response.json();
              } else {
                throw new Error("Failed to update status");
              }
            })
            .then((data) => {
              console.log(data.message); // Log success message
              const statusSpan = statusDisplay.querySelector("span");
              statusSpan.textContent = newStatus;
              statusSpan.className = `inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                newStatus === "Pending"
                  ? "bg-yellow-100 text-yellow-800"
                  : newStatus === "Approved"
                  ? "bg-green-100 text-green-800"
                  : "bg-red-100 text-red-800"
              }`;

              // Toggle visibility
              statusEdit.classList.add("hidden");
              statusDisplay.classList.remove("hidden");
            })
            .catch((error) => {
              console.error("Error updating status:", error);
            });
        });

        cancelStatus.addEventListener("click", function () {
          statusEdit.classList.add("hidden");
          statusDisplay.classList.remove("hidden");
        });
      });
    });
  });
</script>